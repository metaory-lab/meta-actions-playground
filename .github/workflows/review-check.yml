name: "ReviewCheck"

on:
  workflow_dispatch:
  pull_request:
    types: [synchronizer,opened,reopened]
  pull_request_review:
    types: [submitted]
  check_run:
    types: [created]

permissions:
  actions: write
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: fake
        run: echo 'hello world'
      - name: get the count of requested reviewers
        run: |
          # len=$(echo $requested_reviewers | jq '. | length')
          len=$(echo '${{ toJson(github.event.pull_request.requested_reviewers) }}' | jq '. | length')
          echo "len = $len"
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
        id: extract_branch
      - name: echo branch name
        run: echo "branch = ${{ steps.extract_branch.outputs.branch }}"
      - name: commit-status
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/metaory/meta-actions-playground/statuses/${{ github.event.pull_request.head.sha }} \
            -d '{"state":"error","target_url":"https://example.com/build/status","description":"The build succeeded!","context":"review-enforcer"}'
      - name: TestFail
        run: exit 0
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
